load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load(
    "@rules_xcodeproj//xcodeproj:defs.bzl",
    "top_level_target",
    "xcode_schemes",
    "xcodeproj",
)

# Xcode gen

xcodeproj(
    name = "xcodeproj",
    install_directory = "",
    project_name = "AdaEngine",
    schemes = [
        xcode_schemes.scheme(
            name = "AdaEditor macOS",
            launch_action = xcode_schemes.launch_action(
                "//Sources/AdaEditor:AdaEditor-macos",
                args = [],
            ),
            test_action = xcode_schemes.test_action([
                "//Tests/AdaEngineTests:AdaEngineTests",
                "//Tests/MathTests:MathTests",
            ]),
        ),
        xcode_schemes.scheme(
            name = "AdaEditor iOS",
            launch_action = xcode_schemes.launch_action(
                "//Sources/AdaEditor:AdaEditor-ios",
                args = [],
            ),
            test_action = xcode_schemes.test_action([
                "//Tests/AdaEngineTests:AdaEngineTests",
                "//Tests/MathTests:MathTests",
            ]),
        ),
    ],
    tags = ["manual"],
    top_level_targets = [
        "//Sources/AdaEditor:AdaEditor-macos",
        top_level_target(
            "//Sources/AdaEditor:AdaEditor-ios",
            target_environments = ["simulator"],
        ),
        "//Tests/AdaEngineTests:AdaEngineTests",
        "//Tests/MathTests:MathTests",
    ],
    visibility = ["//visibility:public"],
)

bzl_library(
    name = "swift_ada_binary",
    srcs = ["swift_ada_binary.bzl"],
    visibility = ["//visibility:public"],
    deps = ["@build_bazel_rules_swift//swift:swift_binary"],
)

bzl_library(
    name = "swift_ada_library",
    srcs = ["swift_ada_library.bzl"],
    visibility = ["//visibility:public"],
    deps = ["@build_bazel_rules_swift//swift"],
)

bzl_library(
    name = "cc_ada_library",
    srcs = ["cc_ada_library.bzl"],
    visibility = ["//visibility:public"],
    deps = ["@build_bazel_rules_swift//swift"],
)
